/**
 * MappingMapToAIM_v2_rv15_XML.java
 *
 * This file was generated by MapForce 2011r2sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;

import java.io.File;
import java.util.*;

public class MappingMapToAIM_v2_rv15_XML extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = false;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}
	public static final String TempFilePath =System.getProperty("java.io.tmpdir")+ "cedaraJava\\";

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_AIM_v3_rv8_XML_beta_mod;
	
		public main(com.altova.mapforce.IMFNode var1_instance_AIM_v3_rv8_XML_beta_mod)
		{
			this.var1_instance_AIM_v3_rv8_XML_beta_mod = var1_instance_AIM_v3_rv8_XML_beta_mod;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_filter_elements;
			com.altova.mapforce.IMFNode var3_filter_elements;
			IEnumerator var4_filter_elements;
			javax.xml.namespace.QName var5_create_qname;
			com.altova.mapforce.IMFNode var6_filter_elements;
			com.altova.mapforce.IMFNode var7_filter_elements;
			IEnumerator var8_filter_elements;
			javax.xml.namespace.QName var9_create_qname;
			javax.xml.namespace.QName var10_create_qname;
			javax.xml.namespace.QName var11_create_qname;
			javax.xml.namespace.QName var12_create_qname;
			javax.xml.namespace.QName var13_create_qname;
			javax.xml.namespace.QName var14_create_qname;
			javax.xml.namespace.QName var15_create_qname;
			javax.xml.namespace.QName var16_create_qname;
			javax.xml.namespace.QName var17_create_qname;
			javax.xml.namespace.QName var18_create_qname;
			javax.xml.namespace.QName var19_create_qname;
			javax.xml.namespace.QName var20_create_qname;
			javax.xml.namespace.QName var21_create_qname;
			javax.xml.namespace.QName var22_create_qname;
			javax.xml.namespace.QName var23_create_qname;
			javax.xml.namespace.QName var24_create_qname;
			javax.xml.namespace.QName var25_create_qname;
			com.altova.mapforce.IMFNode var26_create_attribute;
			com.altova.mapforce.IEnumerable var27_const_;
			com.altova.mapforce.IMFNode var28_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var29_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var30_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var31_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var32_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var33_create_attribute_with_prefix;
			java.lang.String var34_cast;
			java.math.BigDecimal var35_add;
			com.altova.mapforce.IEnumerable var36_filter_elements;
			boolean var37_exists;
			boolean var38_exists;
			java.lang.String var39_cast;
			java.lang.String var40_substring_after;
			com.altova.mapforce.IEnumerable var41_cast;
			com.altova.mapforce.IMFNode var42_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var43_create_attribute_with_prefix;
			com.altova.mapforce.IMFNode var44_create_element_with_prefix;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 4;				
				var2_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageAnnotation", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), closure.var1_instance_AIM_v3_rv8_XML_beta_mod));
				if (!(com.altova.functions.Core.exists(var2_filter_elements))) {state = 0; return false; }
				var3_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var2_filter_elements);
				var4_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageReference", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageReferenceCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), var3_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!var4_filter_elements.moveNext()) {state = 0; return false; }
				var5_create_qname = com.altova.functions.Core.createQName("type", "http://www.w3.org/2001/XMLSchema-instance");
				if (!(com.altova.functions.Core.exists((new seq1_map_map_filter_attributes(var5_create_qname, ((com.altova.mapforce.IMFNode)(var4_filter_elements.current()))))))) {state = 4; return false; }
				var6_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageStudy", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageStudy", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), ((com.altova.mapforce.IMFNode)(var4_filter_elements.current()))))));
				var7_filter_elements = (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ImageSeries", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageSeries", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), var6_filter_elements))));
				var8_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Image", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imageCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), var7_filter_elements)))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var8_filter_elements.moveNext()) {state = 4; return false; }
				var9_create_qname = com.altova.functions.Core.createQName("imageReferenceUID", "");
				var10_create_qname = com.altova.functions.Core.createQName("startTime", "");
				var11_create_qname = com.altova.functions.Core.createQName("cagridId", "");
				var12_create_qname = com.altova.functions.Core.createQName("codeMeaning", "");
				var13_create_qname = com.altova.functions.Core.createQName("dateTime", "");
				var14_create_qname = com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM");
				var15_create_qname = com.altova.functions.Core.createQName("shapeIdentifier", "");
				var16_create_qname = com.altova.functions.Core.createQName("includeFlag", "");
				var17_create_qname = com.altova.functions.Core.createQName("name", "");
				var18_create_qname = com.altova.functions.Core.createQName("codingSchemeDesignator", "");
				var19_create_qname = com.altova.functions.Core.createQName("sopClassUID", "");
				var20_create_qname = com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM");
				var21_create_qname = com.altova.functions.Core.createQName("sopInstanceUID", "");
				var22_create_qname = com.altova.functions.Core.createQName("startDate", "");
				var23_create_qname = com.altova.functions.Core.createQName("referencedFrameNumber", "");
				var24_create_qname = com.altova.functions.Core.createQName("codeValue", "");
				var25_create_qname = com.altova.functions.Core.createQName("instanceUID", "");
				var26_create_attribute = com.altova.functions.Core.createAttribute(var5_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate")));
				var27_const_ = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(""));
				var28_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("lineColor", ""), "", var27_const_);
				var29_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(var9_create_qname, "", var27_const_);
				var30_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("lineThickness", ""), "", var27_const_);
				var31_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("lineOpacity", ""), "", var27_const_);
				var32_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("lineStyle", ""), "", var27_const_);
				var33_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(var11_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger("0"))));
				var34_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var21_create_qname, ((com.altova.mapforce.IMFNode)(var8_filter_elements.current())))));
				var35_add = com.altova.functions.Core.add(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var11_create_qname, ((com.altova.mapforce.IMFNode)(var8_filter_elements.current()))))))), new java.math.BigDecimal("1"));
				var36_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("geometricShapeCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), var3_filter_elements));
				var37_exists = com.altova.functions.Core.exists(var36_filter_elements);
				var38_exists = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("imagingObservationCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), var3_filter_elements));
				var39_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var17_create_qname, var3_filter_elements)));
				var40_substring_after = com.altova.functions.Core.substringAfter(var39_cast, "-");
				var41_cast = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(var35_add))));
				var42_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(var23_create_qname, "", var41_cast);
				var43_create_attribute_with_prefix = com.altova.functions.Core.createAttributeWithPrefix(var11_create_qname, "", var41_cast);
				var44_create_element_with_prefix = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageAnnotation", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq3_seq_(var11_create_qname, var3_filter_elements, var40_substring_after, var39_cast, var13_create_qname, var17_create_qname, var38_exists, var24_create_qname, var12_create_qname, var18_create_qname, var5_create_qname, ((com.altova.mapforce.IMFNode)(var4_filter_elements.current())), var6_filter_elements, var25_create_qname, var22_create_qname, var10_create_qname, var7_filter_elements, var43_create_attribute_with_prefix, var19_create_qname, ((com.altova.mapforce.IMFNode)(var8_filter_elements.current())), var21_create_qname, var34_cast, var28_create_attribute_with_prefix, var31_create_attribute_with_prefix, var32_create_attribute_with_prefix, var30_create_attribute_with_prefix, var37_exists, var36_filter_elements, var16_create_qname, var15_create_qname, var41_cast, var9_create_qname, var20_create_qname, var14_create_qname, var26_create_attribute, var33_create_attribute_with_prefix, var29_create_attribute_with_prefix, var42_create_attribute_with_prefix, var23_create_qname, var27_const_, var35_add)));
				//current = com.altova.functions.Core.resultDocument(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(com.altova.functions.Core.documentURI(closure.var1_instance_AIM_v3_rv8_XML_beta_mod), com.altova.CoreTypes.parseDouble("1"), com.altova.CoreTypes.decimalToDouble((java.math.BigDecimal)com.altova.functions.Core.first(com.mapforce.core.get_position_of_last_delimiter.create(com.altova.functions.Core.documentURI(closure.var1_instance_AIM_v3_rv8_XML_beta_mod), "/", "\\")))), "cedaraJava\\"), var34_cast), var40_substring_after), "-"), com.altova.CoreTypes.decimalToString(var35_add)), "UTF-8", var44_create_element_with_prefix);
				current = com.altova.functions.Core.resultDocument(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.substring(com.altova.functions.Core.documentURI(closure.var1_instance_AIM_v3_rv8_XML_beta_mod), com.altova.CoreTypes.parseDouble("1"), com.altova.CoreTypes.decimalToDouble((java.math.BigDecimal)com.altova.functions.Core.first(com.mapforce.core.get_position_of_last_delimiter.create(com.altova.functions.Core.documentURI(closure.var1_instance_AIM_v3_rv8_XML_beta_mod), "/", "\\")))), TempFilePath), var34_cast), var40_substring_after), "-"), com.altova.CoreTypes.decimalToString(var35_add)), "UTF-8", var44_create_element_with_prefix);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq1_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq1_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq2_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq2_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq2_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}DICOMImageReference"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		java.lang.String var3_substring_after;
		java.lang.String var4_cast;
		javax.xml.namespace.QName var5_create_qname;
		javax.xml.namespace.QName var6_create_qname;
		boolean var7_exists;
		javax.xml.namespace.QName var8_create_qname;
		javax.xml.namespace.QName var9_create_qname;
		javax.xml.namespace.QName var10_create_qname;
		javax.xml.namespace.QName var11_create_qname;
		com.altova.mapforce.IMFNode var12_cur_filter_elements;
		com.altova.mapforce.IMFNode var13_filter_elements;
		javax.xml.namespace.QName var14_create_qname;
		javax.xml.namespace.QName var15_create_qname;
		javax.xml.namespace.QName var16_create_qname;
		com.altova.mapforce.IMFNode var17_filter_elements;
		com.altova.mapforce.IMFNode var18_create_attribute_with_prefix;
		javax.xml.namespace.QName var19_create_qname;
		com.altova.mapforce.IMFNode var20_cur_filter_elements;
		javax.xml.namespace.QName var21_create_qname;
		java.lang.String var22_cast;
		com.altova.mapforce.IMFNode var23_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var24_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var25_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var26_create_attribute_with_prefix;
		boolean var27_exists;
		com.altova.mapforce.IEnumerable var28_filter_elements;
		javax.xml.namespace.QName var29_create_qname;
		javax.xml.namespace.QName var30_create_qname;
		com.altova.mapforce.IEnumerable var31_cast;
		javax.xml.namespace.QName var32_create_qname;
		javax.xml.namespace.QName var33_create_qname;
		javax.xml.namespace.QName var34_create_qname;
		com.altova.mapforce.IMFNode var35_create_attribute;
		com.altova.mapforce.IMFNode var36_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var37_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var38_create_attribute_with_prefix;
		javax.xml.namespace.QName var39_create_qname;
		com.altova.mapforce.IEnumerable var40_const_;
		java.math.BigDecimal var41_add;
	
		public seq3_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, java.lang.String var3_substring_after, java.lang.String var4_cast, javax.xml.namespace.QName var5_create_qname, javax.xml.namespace.QName var6_create_qname, boolean var7_exists, javax.xml.namespace.QName var8_create_qname, javax.xml.namespace.QName var9_create_qname, javax.xml.namespace.QName var10_create_qname, javax.xml.namespace.QName var11_create_qname, com.altova.mapforce.IMFNode var12_cur_filter_elements, com.altova.mapforce.IMFNode var13_filter_elements, javax.xml.namespace.QName var14_create_qname, javax.xml.namespace.QName var15_create_qname, javax.xml.namespace.QName var16_create_qname, com.altova.mapforce.IMFNode var17_filter_elements, com.altova.mapforce.IMFNode var18_create_attribute_with_prefix, javax.xml.namespace.QName var19_create_qname, com.altova.mapforce.IMFNode var20_cur_filter_elements, javax.xml.namespace.QName var21_create_qname, java.lang.String var22_cast, com.altova.mapforce.IMFNode var23_create_attribute_with_prefix, com.altova.mapforce.IMFNode var24_create_attribute_with_prefix, com.altova.mapforce.IMFNode var25_create_attribute_with_prefix, com.altova.mapforce.IMFNode var26_create_attribute_with_prefix, boolean var27_exists, com.altova.mapforce.IEnumerable var28_filter_elements, javax.xml.namespace.QName var29_create_qname, javax.xml.namespace.QName var30_create_qname, com.altova.mapforce.IEnumerable var31_cast, javax.xml.namespace.QName var32_create_qname, javax.xml.namespace.QName var33_create_qname, javax.xml.namespace.QName var34_create_qname, com.altova.mapforce.IMFNode var35_create_attribute, com.altova.mapforce.IMFNode var36_create_attribute_with_prefix, com.altova.mapforce.IMFNode var37_create_attribute_with_prefix, com.altova.mapforce.IMFNode var38_create_attribute_with_prefix, javax.xml.namespace.QName var39_create_qname, com.altova.mapforce.IEnumerable var40_const_, java.math.BigDecimal var41_add)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_substring_after = var3_substring_after;
			this.var4_cast = var4_cast;
			this.var5_create_qname = var5_create_qname;
			this.var6_create_qname = var6_create_qname;
			this.var7_exists = var7_exists;
			this.var8_create_qname = var8_create_qname;
			this.var9_create_qname = var9_create_qname;
			this.var10_create_qname = var10_create_qname;
			this.var11_create_qname = var11_create_qname;
			this.var12_cur_filter_elements = var12_cur_filter_elements;
			this.var13_filter_elements = var13_filter_elements;
			this.var14_create_qname = var14_create_qname;
			this.var15_create_qname = var15_create_qname;
			this.var16_create_qname = var16_create_qname;
			this.var17_filter_elements = var17_filter_elements;
			this.var18_create_attribute_with_prefix = var18_create_attribute_with_prefix;
			this.var19_create_qname = var19_create_qname;
			this.var20_cur_filter_elements = var20_cur_filter_elements;
			this.var21_create_qname = var21_create_qname;
			this.var22_cast = var22_cast;
			this.var23_create_attribute_with_prefix = var23_create_attribute_with_prefix;
			this.var24_create_attribute_with_prefix = var24_create_attribute_with_prefix;
			this.var25_create_attribute_with_prefix = var25_create_attribute_with_prefix;
			this.var26_create_attribute_with_prefix = var26_create_attribute_with_prefix;
			this.var27_exists = var27_exists;
			this.var28_filter_elements = var28_filter_elements;
			this.var29_create_qname = var29_create_qname;
			this.var30_create_qname = var30_create_qname;
			this.var31_cast = var31_cast;
			this.var32_create_qname = var32_create_qname;
			this.var33_create_qname = var33_create_qname;
			this.var34_create_qname = var34_create_qname;
			this.var35_create_attribute = var35_create_attribute;
			this.var36_create_attribute_with_prefix = var36_create_attribute_with_prefix;
			this.var37_create_attribute_with_prefix = var37_create_attribute_with_prefix;
			this.var38_create_attribute_with_prefix = var38_create_attribute_with_prefix;
			this.var39_create_qname = var39_create_qname;
			this.var40_const_ = var40_const_;
			this.var41_add = var41_add;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;
			public Enumerator(seq3_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), "xsi", com.altova.functions.Core.box("gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM C:/workspace_nbia/nbia-aim/cederaAIM/AIM_v2_rv15_XML.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("aimVersion", ""), "", com.altova.functions.Core.box("AIM.1.0R3"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("comment", ""), "", com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(closure.var3_substring_after, "@LIDC"), com.altova.functions.Core.substring(closure.var4_cast, com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.subtract(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength(closure.var4_cast)))), new java.math.BigDecimal("1"))), com.altova.CoreTypes.decimalToDouble(new java.math.BigDecimal("2"))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var6_create_qname, "", com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf1_inputtoresult.create(closure.var7_exists))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("uniqueIdentifier", ""), "", com.altova.functions.Core.box("0"));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var8_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var8_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var9_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var9_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var10_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageReferenceCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageReference", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq4_seq_(closure.var11_create_qname, closure.var1_create_qname, closure.var12_cur_filter_elements, closure.var13_filter_elements, closure.var14_create_qname, closure.var15_create_qname, closure.var16_create_qname, closure.var17_filter_elements, closure.var18_create_attribute_with_prefix, closure.var19_create_qname, closure.var20_cur_filter_elements, closure.var21_create_qname, closure.var22_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("geometricShapeCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq8_seq_(closure.var11_create_qname, closure.var18_create_attribute_with_prefix, closure.var23_create_attribute_with_prefix, closure.var24_create_attribute_with_prefix, closure.var25_create_attribute_with_prefix, closure.var26_create_attribute_with_prefix, closure.var27_exists, closure.var28_filter_elements, closure.var29_create_qname, closure.var30_create_qname, closure.var31_cast, closure.var28_filter_elements, closure.var22_cast, closure.var32_create_qname, closure.var33_create_qname, closure.var34_create_qname, closure.var35_create_attribute, closure.var36_create_attribute_with_prefix, closure.var37_create_attribute_with_prefix, closure.var38_create_attribute_with_prefix, closure.var7_exists, closure.var39_create_qname)))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("textAnnotationCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("TextAnnotation", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq30_seq_(closure.var36_create_attribute_with_prefix, closure.var40_const_, closure.var3_substring_after, closure.var41_add, closure.var23_create_attribute_with_prefix, closure.var24_create_attribute_with_prefix, closure.var25_create_attribute_with_prefix, closure.var26_create_attribute_with_prefix, closure.var29_create_qname, closure.var30_create_qname, closure.var33_create_qname, closure.var34_create_qname, closure.var35_create_attribute, closure.var27_exists, closure.var28_filter_elements, closure.var11_create_qname, closure.var22_cast, closure.var32_create_qname, closure.var37_create_attribute_with_prefix, closure.var38_create_attribute_with_prefix)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IMFNode var4_filter_elements;
		javax.xml.namespace.QName var5_create_qname;
		javax.xml.namespace.QName var6_create_qname;
		javax.xml.namespace.QName var7_create_qname;
		com.altova.mapforce.IMFNode var8_filter_elements;
		com.altova.mapforce.IMFNode var9_create_attribute_with_prefix;
		javax.xml.namespace.QName var10_create_qname;
		com.altova.mapforce.IMFNode var11_cur_filter_elements;
		javax.xml.namespace.QName var12_create_qname;
		java.lang.String var13_cast;
	
		public seq4_seq_(javax.xml.namespace.QName var1_create_qname, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IMFNode var4_filter_elements, javax.xml.namespace.QName var5_create_qname, javax.xml.namespace.QName var6_create_qname, javax.xml.namespace.QName var7_create_qname, com.altova.mapforce.IMFNode var8_filter_elements, com.altova.mapforce.IMFNode var9_create_attribute_with_prefix, javax.xml.namespace.QName var10_create_qname, com.altova.mapforce.IMFNode var11_cur_filter_elements, javax.xml.namespace.QName var12_create_qname, java.lang.String var13_cast)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_filter_elements = var4_filter_elements;
			this.var5_create_qname = var5_create_qname;
			this.var6_create_qname = var6_create_qname;
			this.var7_create_qname = var7_create_qname;
			this.var8_filter_elements = var8_filter_elements;
			this.var9_create_attribute_with_prefix = var9_create_attribute_with_prefix;
			this.var10_create_qname = var10_create_qname;
			this.var11_cur_filter_elements = var11_cur_filter_elements;
			this.var12_create_qname = var12_create_qname;
			this.var13_cast = var13_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_seq_ closure;
			public Enumerator(seq4_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}DICOMImageReference")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageStudy", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageStudy", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq5_seq_(closure.var2_create_qname, closure.var4_filter_elements, closure.var5_create_qname, closure.var6_create_qname, closure.var7_create_qname, closure.var8_filter_elements, closure.var9_create_attribute_with_prefix, closure.var10_create_qname, closure.var11_cur_filter_elements, closure.var12_create_qname, closure.var13_cast)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		javax.xml.namespace.QName var4_create_qname;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IMFNode var6_filter_elements;
		com.altova.mapforce.IMFNode var7_create_attribute_with_prefix;
		javax.xml.namespace.QName var8_create_qname;
		com.altova.mapforce.IMFNode var9_cur_filter_elements;
		javax.xml.namespace.QName var10_create_qname;
		java.lang.String var11_cast;
	
		public seq5_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, javax.xml.namespace.QName var3_create_qname, javax.xml.namespace.QName var4_create_qname, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IMFNode var6_filter_elements, com.altova.mapforce.IMFNode var7_create_attribute_with_prefix, javax.xml.namespace.QName var8_create_qname, com.altova.mapforce.IMFNode var9_cur_filter_elements, javax.xml.namespace.QName var10_create_qname, java.lang.String var11_cast)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_create_qname = var4_create_qname;
			this.var5_create_qname = var5_create_qname;
			this.var6_filter_elements = var6_filter_elements;
			this.var7_create_attribute_with_prefix = var7_create_attribute_with_prefix;
			this.var8_create_qname = var8_create_qname;
			this.var9_cur_filter_elements = var9_cur_filter_elements;
			this.var10_create_qname = var10_create_qname;
			this.var11_cast = var11_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_seq_ closure;
			public Enumerator(seq5_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var3_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.CoreTypes.parseDateTime(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var4_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageSeries", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("ImageSeries", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq6_seq_(closure.var1_create_qname, closure.var6_filter_elements, closure.var3_create_qname, closure.var7_create_attribute_with_prefix, closure.var8_create_qname, closure.var9_cur_filter_elements, closure.var10_create_qname, closure.var11_cast)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		javax.xml.namespace.QName var5_create_qname;
		com.altova.mapforce.IMFNode var6_cur_filter_elements;
		javax.xml.namespace.QName var7_create_qname;
		java.lang.String var8_cast;
	
		public seq6_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_filter_elements, javax.xml.namespace.QName var3_create_qname, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, javax.xml.namespace.QName var5_create_qname, com.altova.mapforce.IMFNode var6_cur_filter_elements, javax.xml.namespace.QName var7_create_qname, java.lang.String var8_cast)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_filter_elements = var2_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_qname = var5_create_qname;
			this.var6_cur_filter_elements = var6_cur_filter_elements;
			this.var7_create_qname = var7_create_qname;
			this.var8_cast = var8_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_seq_ closure;
			public Enumerator(seq6_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var1_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var3_create_qname, closure.var2_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("imageCollection", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("Image", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq7_seq_(closure.var4_create_attribute_with_prefix, closure.var5_create_qname, closure.var6_cur_filter_elements, closure.var7_create_qname, closure.var8_cast)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute_with_prefix;
		javax.xml.namespace.QName var2_create_qname;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		javax.xml.namespace.QName var4_create_qname;
		java.lang.String var5_cast;
	
		public seq7_seq_(com.altova.mapforce.IMFNode var1_create_attribute_with_prefix, javax.xml.namespace.QName var2_create_qname, com.altova.mapforce.IMFNode var3_cur_filter_elements, javax.xml.namespace.QName var4_create_qname, java.lang.String var5_cast)
		{
			this.var1_create_attribute_with_prefix = var1_create_attribute_with_prefix;
			this.var2_create_qname = var2_create_qname;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_create_qname = var4_create_qname;
			this.var5_cast = var5_cast;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_seq_ closure;
			public Enumerator(seq7_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var2_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var2_create_qname, closure.var3_cur_filter_elements)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var4_create_qname, "", com.altova.functions.Core.box(com.altova.functions.Core.normalizeSpace(closure.var5_cast)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_seq_ implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var3_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var5_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var6_create_attribute_with_prefix;
		boolean var7_exists;
		com.altova.mapforce.IEnumerable var8_filter_elements;
		javax.xml.namespace.QName var10_create_qname;
		javax.xml.namespace.QName var11_create_qname;
		com.altova.mapforce.IEnumerable var12_cast;
		com.altova.mapforce.IEnumerable var13_filter_elements;
		java.lang.String var16_cast;
		javax.xml.namespace.QName var17_create_qname;
		javax.xml.namespace.QName var18_create_qname;
		javax.xml.namespace.QName var19_create_qname;
		com.altova.mapforce.IMFNode var20_create_attribute;
		com.altova.mapforce.IMFNode var21_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var22_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var23_create_attribute_with_prefix;
		boolean var24_exists;
		javax.xml.namespace.QName var25_create_qname;
	
		public seq8_seq_(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, com.altova.mapforce.IMFNode var3_create_attribute_with_prefix, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, com.altova.mapforce.IMFNode var5_create_attribute_with_prefix, com.altova.mapforce.IMFNode var6_create_attribute_with_prefix, boolean var7_exists, com.altova.mapforce.IEnumerable var8_filter_elements, javax.xml.namespace.QName var10_create_qname, javax.xml.namespace.QName var11_create_qname, com.altova.mapforce.IEnumerable var12_cast, com.altova.mapforce.IEnumerable var13_filter_elements, java.lang.String var16_cast, javax.xml.namespace.QName var17_create_qname, javax.xml.namespace.QName var18_create_qname, javax.xml.namespace.QName var19_create_qname, com.altova.mapforce.IMFNode var20_create_attribute, com.altova.mapforce.IMFNode var21_create_attribute_with_prefix, com.altova.mapforce.IMFNode var22_create_attribute_with_prefix, com.altova.mapforce.IMFNode var23_create_attribute_with_prefix, boolean var24_exists, javax.xml.namespace.QName var25_create_qname)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_create_attribute_with_prefix = var3_create_attribute_with_prefix;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_attribute_with_prefix = var5_create_attribute_with_prefix;
			this.var6_create_attribute_with_prefix = var6_create_attribute_with_prefix;
			this.var7_exists = var7_exists;
			this.var8_filter_elements = var8_filter_elements;
			this.var10_create_qname = var10_create_qname;
			this.var11_create_qname = var11_create_qname;
			this.var12_cast = var12_cast;
			this.var13_filter_elements = var13_filter_elements;
			this.var16_cast = var16_cast;
			this.var17_create_qname = var17_create_qname;
			this.var18_create_qname = var18_create_qname;
			this.var19_create_qname = var19_create_qname;
			this.var20_create_attribute = var20_create_attribute;
			this.var21_create_attribute_with_prefix = var21_create_attribute_with_prefix;
			this.var22_create_attribute_with_prefix = var22_create_attribute_with_prefix;
			this.var23_create_attribute_with_prefix = var23_create_attribute_with_prefix;
			this.var24_exists = var24_exists;
			this.var25_create_qname = var25_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_seq_ closure;
			IEnumerator var9_filter_elements;
			IEnumerator var14_filter_elements;
			com.altova.mapforce.IEnumerable var15_filter_elements;
			public Enumerator(seq8_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(closure.var1_create_qname, com.altova.functions.Core.box(com.altova.functions.Lang.stringAsQName("{gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM}Polyline")));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!(closure.var7_exists)) {state = 14; return false; }
				var9_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var8_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var9_filter_elements.moveNext()) {state = 14; return false; }
				if (!(com.altova.functions.Core.exists((new seq9_map_map_filter_attributes(closure.var1_create_qname, ((com.altova.mapforce.IMFNode)(var9_filter_elements.current()))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var10_create_qname, ((com.altova.mapforce.IMFNode)(var9_filter_elements.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var11_create_qname, "", closure.var12_cast);
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!(closure.var7_exists)) {state = 0; return false; }
				var14_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var13_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq11_map_map_filter_attributes(closure.var1_create_qname, ((com.altova.mapforce.IMFNode)(var14_filter_elements.current()))))))) {state = 17; return false; }
				var15_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), ((com.altova.mapforce.IMFNode)(var14_filter_elements.current()))))));
				if (!(com.altova.functions.Core.exists((new seq13_map_map_filter_elements(var15_filter_elements, closure.var1_create_qname, closure.var16_cast, closure.var17_create_qname))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElementWithPrefix(closure.var18_create_qname, "", (new seq17_seq_(var15_filter_elements, closure.var1_create_qname, closure.var16_cast, closure.var17_create_qname, closure.var19_create_qname, closure.var20_create_attribute, closure.var21_create_attribute_with_prefix, closure.var22_create_attribute_with_prefix, closure.var23_create_attribute_with_prefix, closure.var1_create_qname, closure.var24_exists, closure.var19_create_qname, closure.var20_create_attribute, closure.var21_create_attribute_with_prefix, closure.var22_create_attribute_with_prefix, closure.var25_create_qname, closure.var1_create_qname, closure.var24_exists, closure.var19_create_qname, closure.var20_create_attribute, closure.var21_create_attribute_with_prefix, closure.var22_create_attribute_with_prefix, closure.var25_create_qname, closure.var1_create_qname, closure.var24_exists, closure.var19_create_qname, closure.var20_create_attribute, closure.var21_create_attribute_with_prefix, closure.var22_create_attribute_with_prefix, closure.var25_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq9_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq9_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq10_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq10_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq10_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq11_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq11_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq12_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq12_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq12_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_map_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var2_create_qname;
		java.lang.String var3_cast;
		javax.xml.namespace.QName var4_create_qname;
	
		public seq13_map_map_filter_elements(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var2_create_qname, java.lang.String var3_cast, javax.xml.namespace.QName var4_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var2_create_qname = var2_create_qname;
			this.var3_cast = var3_cast;
			this.var4_create_qname = var4_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map_map_filter_elements closure;
			IEnumerator var5_map_filter_elements;
			public Enumerator(seq13_map_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_map_filter_elements = ((new seq14_map_filter_elements(closure.var1_filter_elements, closure.var2_create_qname, closure.var3_cast, closure.var4_create_qname))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_map_filter_elements.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var5_map_filter_elements.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_map_filter_elements implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		java.lang.String var4_cast;
		javax.xml.namespace.QName var5_create_qname;
	
		public seq14_map_filter_elements(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var3_create_qname, java.lang.String var4_cast, javax.xml.namespace.QName var5_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_cast = var4_cast;
			this.var5_create_qname = var5_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map_filter_elements closure;
			IEnumerator var2_filter_elements;
			public Enumerator(seq14_map_filter_elements closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (closure.var1_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq15_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first(com.mapforce.vmf.vmf2_inputtoresult.create(com.altova.functions.Lang.stringCompare(closure.var4_cast, com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq15_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq15_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq16_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq16_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq16_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_filter_elements;
		javax.xml.namespace.QName var3_create_qname;
		java.lang.String var4_cast;
		javax.xml.namespace.QName var5_create_qname;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IMFNode var10_create_attribute;
		com.altova.mapforce.IMFNode var11_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var12_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var13_create_attribute_with_prefix;
		javax.xml.namespace.QName var15_create_qname;
		boolean var16_exists;
		javax.xml.namespace.QName var17_create_qname;
		com.altova.mapforce.IMFNode var18_create_attribute;
		com.altova.mapforce.IMFNode var19_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var20_create_attribute_with_prefix;
		javax.xml.namespace.QName var21_create_qname;
		javax.xml.namespace.QName var23_create_qname;
		boolean var24_exists;
		javax.xml.namespace.QName var25_create_qname;
		com.altova.mapforce.IMFNode var26_create_attribute;
		com.altova.mapforce.IMFNode var27_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var28_create_attribute_with_prefix;
		javax.xml.namespace.QName var29_create_qname;
		javax.xml.namespace.QName var31_create_qname;
		boolean var32_exists;
		javax.xml.namespace.QName var33_create_qname;
		com.altova.mapforce.IMFNode var34_create_attribute;
		com.altova.mapforce.IMFNode var35_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var36_create_attribute_with_prefix;
		javax.xml.namespace.QName var37_create_qname;
	
		public seq17_seq_(com.altova.mapforce.IEnumerable var1_filter_elements, javax.xml.namespace.QName var3_create_qname, java.lang.String var4_cast, javax.xml.namespace.QName var5_create_qname, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IMFNode var10_create_attribute, com.altova.mapforce.IMFNode var11_create_attribute_with_prefix, com.altova.mapforce.IMFNode var12_create_attribute_with_prefix, com.altova.mapforce.IMFNode var13_create_attribute_with_prefix, javax.xml.namespace.QName var15_create_qname, boolean var16_exists, javax.xml.namespace.QName var17_create_qname, com.altova.mapforce.IMFNode var18_create_attribute, com.altova.mapforce.IMFNode var19_create_attribute_with_prefix, com.altova.mapforce.IMFNode var20_create_attribute_with_prefix, javax.xml.namespace.QName var21_create_qname, javax.xml.namespace.QName var23_create_qname, boolean var24_exists, javax.xml.namespace.QName var25_create_qname, com.altova.mapforce.IMFNode var26_create_attribute, com.altova.mapforce.IMFNode var27_create_attribute_with_prefix, com.altova.mapforce.IMFNode var28_create_attribute_with_prefix, javax.xml.namespace.QName var29_create_qname, javax.xml.namespace.QName var31_create_qname, boolean var32_exists, javax.xml.namespace.QName var33_create_qname, com.altova.mapforce.IMFNode var34_create_attribute, com.altova.mapforce.IMFNode var35_create_attribute_with_prefix, com.altova.mapforce.IMFNode var36_create_attribute_with_prefix, javax.xml.namespace.QName var37_create_qname)
		{
			this.var1_filter_elements = var1_filter_elements;
			this.var3_create_qname = var3_create_qname;
			this.var4_cast = var4_cast;
			this.var5_create_qname = var5_create_qname;
			this.var9_create_qname = var9_create_qname;
			this.var10_create_attribute = var10_create_attribute;
			this.var11_create_attribute_with_prefix = var11_create_attribute_with_prefix;
			this.var12_create_attribute_with_prefix = var12_create_attribute_with_prefix;
			this.var13_create_attribute_with_prefix = var13_create_attribute_with_prefix;
			this.var15_create_qname = var15_create_qname;
			this.var16_exists = var16_exists;
			this.var17_create_qname = var17_create_qname;
			this.var18_create_attribute = var18_create_attribute;
			this.var19_create_attribute_with_prefix = var19_create_attribute_with_prefix;
			this.var20_create_attribute_with_prefix = var20_create_attribute_with_prefix;
			this.var21_create_qname = var21_create_qname;
			this.var23_create_qname = var23_create_qname;
			this.var24_exists = var24_exists;
			this.var25_create_qname = var25_create_qname;
			this.var26_create_attribute = var26_create_attribute;
			this.var27_create_attribute_with_prefix = var27_create_attribute_with_prefix;
			this.var28_create_attribute_with_prefix = var28_create_attribute_with_prefix;
			this.var29_create_qname = var29_create_qname;
			this.var31_create_qname = var31_create_qname;
			this.var32_exists = var32_exists;
			this.var33_create_qname = var33_create_qname;
			this.var34_create_attribute = var34_create_attribute;
			this.var35_create_attribute_with_prefix = var35_create_attribute_with_prefix;
			this.var36_create_attribute_with_prefix = var36_create_attribute_with_prefix;
			this.var37_create_qname = var37_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_seq_ closure;
			IEnumerator var2_filter_elements;
			IEnumerator var14_filter_elements;
			javax.xml.namespace.QName var6_create_qname;
			IEnumerator var22_filter_elements;
			javax.xml.namespace.QName var7_create_qname;
			javax.xml.namespace.QName var8_create_qname;
			IEnumerator var30_filter_elements;
			public Enumerator(seq17_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements = (closure.var1_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements.moveNext()) {state = 3; return false; }
				if (!(com.altova.functions.Core.exists((new seq18_map_map_filter_attributes(closure.var3_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current()))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first(com.mapforce.vmf.vmf2_inputtoresult.create(com.altova.functions.Lang.stringCompare(closure.var4_cast, com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())))))))))) {state = 2; return false; }
				var6_create_qname = com.altova.functions.Core.createQName("y", "");
				var7_create_qname = com.altova.functions.Core.createQName("coordinateIndex", "");
				var8_create_qname = com.altova.functions.Core.createQName("x", "");
				current = com.altova.functions.Core.createElementWithPrefix(closure.var9_create_qname, "", (new seq20_seq_(closure.var10_create_attribute, closure.var11_create_attribute_with_prefix, var7_create_qname, ((com.altova.mapforce.IMFNode)(var2_filter_elements.current())), closure.var12_create_attribute_with_prefix, closure.var13_create_attribute_with_prefix, var8_create_qname, var6_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				var14_filter_elements = (closure.var1_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var14_filter_elements.moveNext()) {state = 10; return false; }
				if (!(com.altova.functions.Core.exists((new seq21_map_map_filter_attributes(closure.var15_create_qname, ((com.altova.mapforce.IMFNode)(var14_filter_elements.current()))))))) {state = 9; return false; }
				if (!(closure.var16_exists)) {state = 12; return false; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				var22_filter_elements = (closure.var1_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElementWithPrefix(closure.var17_create_qname, "", (new seq23_seq_(closure.var18_create_attribute, closure.var19_create_attribute_with_prefix, ((com.altova.mapforce.IMFNode)(var14_filter_elements.current())), closure.var20_create_attribute_with_prefix, closure.var21_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var22_filter_elements.moveNext()) {state = 17; return false; }
				if (!(com.altova.functions.Core.exists((new seq24_map_map_filter_attributes(closure.var23_create_qname, ((com.altova.mapforce.IMFNode)(var22_filter_elements.current()))))))) {state = 16; return false; }
				if (!(closure.var24_exists)) {state = 19; return false; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				var30_filter_elements = (closure.var1_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createElementWithPrefix(closure.var25_create_qname, "", (new seq26_seq_(closure.var26_create_attribute, closure.var27_create_attribute_with_prefix, ((com.altova.mapforce.IMFNode)(var22_filter_elements.current())), closure.var28_create_attribute_with_prefix, closure.var29_create_qname)));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var30_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq27_map_map_filter_attributes(closure.var31_create_qname, ((com.altova.mapforce.IMFNode)(var30_filter_elements.current()))))))) {state = 23; return false; }
				if (!(closure.var32_exists)) {state = 26; return false; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				current = com.altova.functions.Core.createElementWithPrefix(closure.var33_create_qname, "", (new seq29_seq_(closure.var34_create_attribute, closure.var35_create_attribute_with_prefix, ((com.altova.mapforce.IMFNode)(var30_filter_elements.current())), closure.var36_create_attribute_with_prefix, closure.var37_create_qname)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq18_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq18_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq19_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq19_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq19_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		javax.xml.namespace.QName var3_create_qname;
		com.altova.mapforce.IMFNode var4_cur_filter_elements;
		com.altova.mapforce.IMFNode var5_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var6_create_attribute_with_prefix;
		javax.xml.namespace.QName var7_create_qname;
		javax.xml.namespace.QName var8_create_qname;
	
		public seq20_seq_(com.altova.mapforce.IMFNode var1_create_attribute, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, javax.xml.namespace.QName var3_create_qname, com.altova.mapforce.IMFNode var4_cur_filter_elements, com.altova.mapforce.IMFNode var5_create_attribute_with_prefix, com.altova.mapforce.IMFNode var6_create_attribute_with_prefix, javax.xml.namespace.QName var7_create_qname, javax.xml.namespace.QName var8_create_qname)
		{
			this.var1_create_attribute = var1_create_attribute;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_create_qname = var3_create_qname;
			this.var4_cur_filter_elements = var4_cur_filter_elements;
			this.var5_create_attribute_with_prefix = var5_create_attribute_with_prefix;
			this.var6_create_attribute_with_prefix = var6_create_attribute_with_prefix;
			this.var7_create_qname = var7_create_qname;
			this.var8_create_qname = var8_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_seq_ closure;
			public Enumerator(seq20_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var3_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var3_create_qname, closure.var4_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var5_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var6_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var7_create_qname, closure.var4_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var8_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var8_create_qname, closure.var4_cur_filter_elements)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq21_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq21_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq22_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq22_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq22_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		javax.xml.namespace.QName var5_create_qname;
	
		public seq23_seq_(com.altova.mapforce.IMFNode var1_create_attribute, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, javax.xml.namespace.QName var5_create_qname)
		{
			this.var1_create_attribute = var1_create_attribute;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_qname = var5_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_seq_ closure;
			public Enumerator(seq23_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("coordinateIndex", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("1"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("coordinateIndex", ""), closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("1"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("x", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("x", ""), closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("y", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.add(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("y", ""), closure.var3_cur_filter_elements))))), new java.math.BigDecimal("1"))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq24_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq24_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq25_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq25_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq25_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		javax.xml.namespace.QName var5_create_qname;
	
		public seq26_seq_(com.altova.mapforce.IMFNode var1_create_attribute, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, javax.xml.namespace.QName var5_create_qname)
		{
			this.var1_create_attribute = var1_create_attribute;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_qname = var5_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_seq_ closure;
			public Enumerator(seq26_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("coordinateIndex", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("2"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("coordinateIndex", ""), closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("1"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("x", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.add(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("x", ""), closure.var3_cur_filter_elements))))), new java.math.BigDecimal("1"))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("y", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("y", ""), closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq27_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq27_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq28_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq28_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq28_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var3_cur_filter_elements;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		javax.xml.namespace.QName var5_create_qname;
	
		public seq29_seq_(com.altova.mapforce.IMFNode var1_create_attribute, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, com.altova.mapforce.IMFNode var3_cur_filter_elements, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, javax.xml.namespace.QName var5_create_qname)
		{
			this.var1_create_attribute = var1_create_attribute;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_cur_filter_elements = var3_cur_filter_elements;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_qname = var5_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_seq_ closure;
			public Enumerator(seq29_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("coordinateIndex", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("3"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("coordinateIndex", ""), closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var5_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(new java.math.BigDecimal("1"), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var5_create_qname, closure.var3_cur_filter_elements))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("x", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("x", ""), closure.var3_cur_filter_elements)))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("y", ""), "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.subtract(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("y", ""), closure.var3_cur_filter_elements))))), new java.math.BigDecimal("1"))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute_with_prefix;
		com.altova.mapforce.IEnumerable var2_const_;
		java.lang.String var3_substring_after;
		java.math.BigDecimal var4_add;
		com.altova.mapforce.IMFNode var5_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var6_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var7_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var8_create_attribute_with_prefix;
		javax.xml.namespace.QName var9_create_qname;
		javax.xml.namespace.QName var10_create_qname;
		javax.xml.namespace.QName var11_create_qname;
		javax.xml.namespace.QName var12_create_qname;
		com.altova.mapforce.IMFNode var13_create_attribute;
		boolean var14_exists;
		com.altova.mapforce.IEnumerable var15_filter_elements;
		javax.xml.namespace.QName var16_create_qname;
		java.lang.String var17_cast;
		javax.xml.namespace.QName var18_create_qname;
		com.altova.mapforce.IMFNode var19_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var20_create_attribute_with_prefix;
	
		public seq30_seq_(com.altova.mapforce.IMFNode var1_create_attribute_with_prefix, com.altova.mapforce.IEnumerable var2_const_, java.lang.String var3_substring_after, java.math.BigDecimal var4_add, com.altova.mapforce.IMFNode var5_create_attribute_with_prefix, com.altova.mapforce.IMFNode var6_create_attribute_with_prefix, com.altova.mapforce.IMFNode var7_create_attribute_with_prefix, com.altova.mapforce.IMFNode var8_create_attribute_with_prefix, javax.xml.namespace.QName var9_create_qname, javax.xml.namespace.QName var10_create_qname, javax.xml.namespace.QName var11_create_qname, javax.xml.namespace.QName var12_create_qname, com.altova.mapforce.IMFNode var13_create_attribute, boolean var14_exists, com.altova.mapforce.IEnumerable var15_filter_elements, javax.xml.namespace.QName var16_create_qname, java.lang.String var17_cast, javax.xml.namespace.QName var18_create_qname, com.altova.mapforce.IMFNode var19_create_attribute_with_prefix, com.altova.mapforce.IMFNode var20_create_attribute_with_prefix)
		{
			this.var1_create_attribute_with_prefix = var1_create_attribute_with_prefix;
			this.var2_const_ = var2_const_;
			this.var3_substring_after = var3_substring_after;
			this.var4_add = var4_add;
			this.var5_create_attribute_with_prefix = var5_create_attribute_with_prefix;
			this.var6_create_attribute_with_prefix = var6_create_attribute_with_prefix;
			this.var7_create_attribute_with_prefix = var7_create_attribute_with_prefix;
			this.var8_create_attribute_with_prefix = var8_create_attribute_with_prefix;
			this.var9_create_qname = var9_create_qname;
			this.var10_create_qname = var10_create_qname;
			this.var11_create_qname = var11_create_qname;
			this.var12_create_qname = var12_create_qname;
			this.var13_create_attribute = var13_create_attribute;
			this.var14_exists = var14_exists;
			this.var15_filter_elements = var15_filter_elements;
			this.var16_create_qname = var16_create_qname;
			this.var17_cast = var17_cast;
			this.var18_create_qname = var18_create_qname;
			this.var19_create_attribute_with_prefix = var19_create_attribute_with_prefix;
			this.var20_create_attribute_with_prefix = var20_create_attribute_with_prefix;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_seq_ closure;
			public Enumerator(seq30_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("font", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("fontColor", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("fontEffect", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("fontSize", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("fontStyle", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("text", ""), "", com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(closure.var3_substring_after, " "), com.altova.CoreTypes.decimalToString(closure.var4_add))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createAttributeWithPrefix(com.altova.functions.Core.createQName("textJustify", ""), "", closure.var2_const_);
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("multiPoint", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(com.altova.functions.Core.createQName("MultiPoint", "gme://caCORE.caCORE/3.2/edu.northwestern.radiology.AIM"), "", (new seq31_seq_(closure.var1_create_attribute_with_prefix, closure.var5_create_attribute_with_prefix, closure.var6_create_attribute_with_prefix, closure.var7_create_attribute_with_prefix, closure.var8_create_attribute_with_prefix, closure.var9_create_qname, closure.var10_create_qname, closure.var11_create_qname, closure.var12_create_qname, closure.var13_create_attribute, closure.var14_exists, closure.var15_filter_elements, closure.var16_create_qname, closure.var17_cast, closure.var18_create_qname, closure.var19_create_attribute_with_prefix, closure.var20_create_attribute_with_prefix)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var3_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var4_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var5_create_attribute_with_prefix;
		javax.xml.namespace.QName var6_create_qname;
		javax.xml.namespace.QName var7_create_qname;
		javax.xml.namespace.QName var8_create_qname;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IMFNode var10_create_attribute;
		boolean var11_exists;
		com.altova.mapforce.IEnumerable var12_filter_elements;
		javax.xml.namespace.QName var13_create_qname;
		java.lang.String var14_cast;
		javax.xml.namespace.QName var15_create_qname;
		com.altova.mapforce.IMFNode var16_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var17_create_attribute_with_prefix;
	
		public seq31_seq_(com.altova.mapforce.IMFNode var1_create_attribute_with_prefix, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, com.altova.mapforce.IMFNode var3_create_attribute_with_prefix, com.altova.mapforce.IMFNode var4_create_attribute_with_prefix, com.altova.mapforce.IMFNode var5_create_attribute_with_prefix, javax.xml.namespace.QName var6_create_qname, javax.xml.namespace.QName var7_create_qname, javax.xml.namespace.QName var8_create_qname, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IMFNode var10_create_attribute, boolean var11_exists, com.altova.mapforce.IEnumerable var12_filter_elements, javax.xml.namespace.QName var13_create_qname, java.lang.String var14_cast, javax.xml.namespace.QName var15_create_qname, com.altova.mapforce.IMFNode var16_create_attribute_with_prefix, com.altova.mapforce.IMFNode var17_create_attribute_with_prefix)
		{
			this.var1_create_attribute_with_prefix = var1_create_attribute_with_prefix;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_create_attribute_with_prefix = var3_create_attribute_with_prefix;
			this.var4_create_attribute_with_prefix = var4_create_attribute_with_prefix;
			this.var5_create_attribute_with_prefix = var5_create_attribute_with_prefix;
			this.var6_create_qname = var6_create_qname;
			this.var7_create_qname = var7_create_qname;
			this.var8_create_qname = var8_create_qname;
			this.var9_create_qname = var9_create_qname;
			this.var10_create_attribute = var10_create_attribute;
			this.var11_exists = var11_exists;
			this.var12_filter_elements = var12_filter_elements;
			this.var13_create_qname = var13_create_qname;
			this.var14_cast = var14_cast;
			this.var15_create_qname = var15_create_qname;
			this.var16_create_attribute_with_prefix = var16_create_attribute_with_prefix;
			this.var17_create_attribute_with_prefix = var17_create_attribute_with_prefix;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_seq_ closure;
			public Enumerator(seq31_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var5_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var6_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("false"))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createAttributeWithPrefix(closure.var7_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger("-1"))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElementWithPrefix(closure.var8_create_qname, "", com.altova.functions.Core.box(com.altova.functions.Core.createElementWithPrefix(closure.var9_create_qname, "", (new seq32_seq_(closure.var10_create_attribute, closure.var1_create_attribute_with_prefix, closure.var11_exists, closure.var12_filter_elements, closure.var13_create_qname, closure.var14_cast, closure.var15_create_qname, closure.var16_create_attribute_with_prefix, closure.var17_create_attribute_with_prefix, closure.var12_filter_elements, closure.var13_create_qname, closure.var14_cast, closure.var15_create_qname, closure.var13_create_qname, closure.var14_cast, closure.var15_create_qname)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_create_attribute;
		com.altova.mapforce.IMFNode var2_create_attribute_with_prefix;
		boolean var3_exists;
		com.altova.mapforce.IEnumerable var4_filter_elements;
		javax.xml.namespace.QName var6_create_qname;
		java.lang.String var8_cast;
		javax.xml.namespace.QName var9_create_qname;
		com.altova.mapforce.IMFNode var11_create_attribute_with_prefix;
		com.altova.mapforce.IMFNode var12_create_attribute_with_prefix;
		com.altova.mapforce.IEnumerable var13_filter_elements;
		javax.xml.namespace.QName var16_create_qname;
		java.lang.String var18_cast;
		javax.xml.namespace.QName var19_create_qname;
		javax.xml.namespace.QName var22_create_qname;
		java.lang.String var24_cast;
		javax.xml.namespace.QName var25_create_qname;
	
		public seq32_seq_(com.altova.mapforce.IMFNode var1_create_attribute, com.altova.mapforce.IMFNode var2_create_attribute_with_prefix, boolean var3_exists, com.altova.mapforce.IEnumerable var4_filter_elements, javax.xml.namespace.QName var6_create_qname, java.lang.String var8_cast, javax.xml.namespace.QName var9_create_qname, com.altova.mapforce.IMFNode var11_create_attribute_with_prefix, com.altova.mapforce.IMFNode var12_create_attribute_with_prefix, com.altova.mapforce.IEnumerable var13_filter_elements, javax.xml.namespace.QName var16_create_qname, java.lang.String var18_cast, javax.xml.namespace.QName var19_create_qname, javax.xml.namespace.QName var22_create_qname, java.lang.String var24_cast, javax.xml.namespace.QName var25_create_qname)
		{
			this.var1_create_attribute = var1_create_attribute;
			this.var2_create_attribute_with_prefix = var2_create_attribute_with_prefix;
			this.var3_exists = var3_exists;
			this.var4_filter_elements = var4_filter_elements;
			this.var6_create_qname = var6_create_qname;
			this.var8_cast = var8_cast;
			this.var9_create_qname = var9_create_qname;
			this.var11_create_attribute_with_prefix = var11_create_attribute_with_prefix;
			this.var12_create_attribute_with_prefix = var12_create_attribute_with_prefix;
			this.var13_filter_elements = var13_filter_elements;
			this.var16_create_qname = var16_create_qname;
			this.var18_cast = var18_cast;
			this.var19_create_qname = var19_create_qname;
			this.var22_create_qname = var22_create_qname;
			this.var24_cast = var24_cast;
			this.var25_create_qname = var25_create_qname;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_seq_ closure;
			IEnumerator var5_filter_elements;
			IEnumerator var7_filter_elements;
			com.altova.mapforce.IEnumerable var14_filter_elements;
			IEnumerator var15_filter_elements;
			javax.xml.namespace.QName var10_create_qname;
			IEnumerator var21_filter_elements;
			IEnumerator var17_filter_elements;
			IEnumerator var23_filter_elements;
			javax.xml.namespace.QName var20_create_qname;
			javax.xml.namespace.QName var26_create_qname;
			public Enumerator(seq32_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_create_attribute;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!(closure.var3_exists)) {state = 16; return false; }
				var5_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var4_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 8;				
				if (!var5_filter_elements.moveNext()) {state = 16; return false; }
				if (!(com.altova.functions.Core.exists((new seq33_map_map_filter_attributes(closure.var6_create_qname, ((com.altova.mapforce.IMFNode)(var5_filter_elements.current()))))))) {state = 5; return false; }
				var7_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), ((com.altova.mapforce.IMFNode)(var5_filter_elements.current())))))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var7_filter_elements.moveNext()) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists((new seq35_map_map_filter_attributes(closure.var6_create_qname, ((com.altova.mapforce.IMFNode)(var7_filter_elements.current()))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first(com.mapforce.vmf.vmf2_inputtoresult.create(com.altova.functions.Lang.stringCompare(closure.var8_cast, com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var9_create_qname, ((com.altova.mapforce.IMFNode)(var7_filter_elements.current())))))))))) {state = 8; return false; }
				var10_create_qname = com.altova.functions.Core.createQName("coordinateIndex", "");
				current = com.altova.functions.Core.createAttributeWithPrefix(var10_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.add(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var10_create_qname, ((com.altova.mapforce.IMFNode)(var7_filter_elements.current()))))))), new java.math.BigDecimal("1"))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = closure.var11_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = closure.var12_create_attribute_with_prefix;
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!(closure.var3_exists)) {state = 0; return false; }
				var14_filter_elements = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("GeometricShape", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var13_filter_elements)));
				var15_filter_elements = (var14_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 23;				
				if (!var15_filter_elements.moveNext()) {state = 21; return false; }
				if (!(com.altova.functions.Core.exists((new seq37_map_map_filter_attributes(closure.var16_create_qname, ((com.altova.mapforce.IMFNode)(var15_filter_elements.current()))))))) {state = 20; return false; }
				var17_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), ((com.altova.mapforce.IMFNode)(var15_filter_elements.current())))))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 31;				
				var21_filter_elements = (var14_filter_elements).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var17_filter_elements.moveNext()) {state = 20; return false; }
				if (!(com.altova.functions.Core.exists((new seq39_map_map_filter_attributes(closure.var16_create_qname, ((com.altova.mapforce.IMFNode)(var17_filter_elements.current()))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first(com.mapforce.vmf.vmf2_inputtoresult.create(com.altova.functions.Lang.stringCompare(closure.var18_cast, com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var19_create_qname, ((com.altova.mapforce.IMFNode)(var17_filter_elements.current())))))))))) {state = 23; return false; }
				var20_create_qname = com.altova.functions.Core.createQName("x", "");
				current = com.altova.functions.Core.createAttributeWithPrefix(var20_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var20_create_qname, ((com.altova.mapforce.IMFNode)(var17_filter_elements.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 34;				
				if (!var21_filter_elements.moveNext()) {state = 0; return false; }
				if (!(com.altova.functions.Core.exists((new seq41_map_map_filter_attributes(closure.var22_create_qname, ((com.altova.mapforce.IMFNode)(var21_filter_elements.current()))))))) {state = 31; return false; }
				var23_filter_elements = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("SpatialCoordinate", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("spatialCoordinateCollection", "gme://caCORE/3.2/edu.northwestern.radiology.AIM"), ((com.altova.mapforce.IMFNode)(var21_filter_elements.current())))))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var23_filter_elements.moveNext()) {state = 31; return false; }
				if (!(com.altova.functions.Core.exists((new seq43_map_map_filter_attributes(closure.var22_create_qname, ((com.altova.mapforce.IMFNode)(var23_filter_elements.current()))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first(com.mapforce.vmf.vmf2_inputtoresult.create(com.altova.functions.Lang.stringCompare(closure.var24_cast, com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(closure.var25_create_qname, ((com.altova.mapforce.IMFNode)(var23_filter_elements.current())))))))))) {state = 34; return false; }
				var26_create_qname = com.altova.functions.Core.createQName("y", "");
				current = com.altova.functions.Core.createAttributeWithPrefix(var26_create_qname, "", com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(var26_create_qname, ((com.altova.mapforce.IMFNode)(var23_filter_elements.current())))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq33_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq33_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq34_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq34_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq34_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq35_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq35_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq36_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq36_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq36_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq37_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq37_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq38_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq38_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq38_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq39_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq39_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq40_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq40_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq40_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq41_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq41_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq42_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq42_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq42_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}Point"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_map_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq43_map_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_map_map_filter_attributes closure;
			IEnumerator var3_map_filter_attributes;
			public Enumerator(seq43_map_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_map_filter_attributes = ((new seq44_map_filter_attributes(closure.var1_create_qname, closure.var2_cur_filter_elements))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_map_filter_attributes.moveNext()) {state = 0; return false; }
				if (!(((Boolean)(var3_map_filter_attributes.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_map_filter_attributes implements IEnumerable
	{
		javax.xml.namespace.QName var1_create_qname;
		com.altova.mapforce.IMFNode var2_cur_filter_elements;
	
		public seq44_map_filter_attributes(javax.xml.namespace.QName var1_create_qname, com.altova.mapforce.IMFNode var2_cur_filter_elements)
		{
			this.var1_create_qname = var1_create_qname;
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_map_filter_attributes closure;
			IEnumerator var3_filter_attributes;
			public Enumerator(seq44_map_filter_attributes closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter_attributes = (com.altova.functions.Core.filterAttributes(closure.var1_create_qname, closure.var2_cur_filter_elements)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter_attributes.moveNext()) {state = 0; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToQName(((com.altova.mapforce.IMFNode)(var3_filter_attributes.current()))), com.altova.functions.Lang.stringAsQName("{gme://caCORE/3.2/edu.northwestern.radiology.AIM}TwoDimensionSpatialCoordinate"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varAIM_v3_rv8_XML_beta_mod2Instance;

	public void run(String AIM_v3_rv8_XML_beta_mod2SourceFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + AIM_v3_rv8_XML_beta_mod2SourceFilename + "...\n");
		com.altova.io.FileInput AIM_v3_rv8_XML_beta_mod2Source = new com.altova.io.FileInput(AIM_v3_rv8_XML_beta_mod2SourceFilename);

		// run
		run(AIM_v3_rv8_XML_beta_mod2Source);

		// close source streams
		AIM_v3_rv8_XML_beta_mod2Source.close();
	}


	// main entry point

	public void run(com.altova.io.Input AIM_v3_rv8_XML_beta_mod2Source) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_AIM_v3_rv8_XML_beta_mod2 = XmlTreeOperations.loadDocument(AIM_v3_rv8_XML_beta_mod2Source);
		varAIM_v3_rv8_XML_beta_mod2Instance = doc_AIM_v3_rv8_XML_beta_mod2;
		AIM_v3_rv8_XML_beta_mod2Source.close();

		// Create the target

		// Execute mapping
		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varAIM_v3_rv8_XML_beta_mod2Instance, AIM_v3_rv8_XML_beta_mod2Source.getFilename()));

		for (IEnumerator en = mapping.enumerator(); en.moveNext();)
		{
		  MFDocument doc = (MFDocument) en.current();
		org.w3c.dom.Document AIM_v2_rv15_XML2Doc = XmlTreeOperations.createDocument();
		  com.altova.io.Output AIM_v2_rv15_XMLTarget = new com.altova.io.FileOutput(doc.getFilename());
		  com.altova.xml.MFDOMWriter.write(doc.select(IMFNode.MFQueryKind_All, null), AIM_v2_rv15_XML2Doc);
		XmlTreeOperations.saveDocument(AIM_v2_rv15_XML2Doc, AIM_v2_rv15_XMLTarget, "UTF-8", false, true, true);
		  AIM_v2_rv15_XMLTarget.close();
		}

	}



}
